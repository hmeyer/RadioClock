#ifndef CHARSET_H
#define CHARSET_H
#include <avr/io.h>
#include <avr/pgmspace.h>
const char characters[] = {
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // 32 = SP
,0x60, 0x60, 0x60, 0x60, 0x60, 0x00, 0x60, 0x60 // 33 = !
,0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // 34 = "
,0x00, 0x50, 0xf8, 0x50, 0xf8, 0x50, 0x00, 0x00 // 35 = #
,0x20, 0x78, 0xa0, 0x70, 0x28, 0x28, 0xf0, 0x20 // 36 = $
,0xc8, 0xd0, 0x10, 0x20, 0x20, 0x40, 0x58, 0x98 // 37 = %
,0x00, 0x70, 0x88, 0x90, 0x60, 0xa8, 0x90, 0x68 // 38 = &
,0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // 39 = '
,0x18, 0x20, 0x20, 0x40, 0x40, 0x20, 0x20, 0x18 // 40 = (
,0xc0, 0x20, 0x20, 0x10, 0x10, 0x20, 0x20, 0xc0 // 41 = klammer zu
,0x00, 0x20, 0xa8, 0x70, 0x50, 0x88, 0x00, 0x00 // 42 = *
,0x00, 0x20, 0x20, 0xf8, 0x20, 0x20, 0x00, 0x00 // 43 = +
,0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x10 // 44 = ,
,0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00 // 45 = -
,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60 // 46 = .
,0x08, 0x10, 0x10, 0x20, 0x20, 0x40, 0x40, 0x80 // 47 = /
,0x70, 0x88, 0x98, 0xa8, 0xa8, 0xc8, 0x88, 0x70 // 48 = 0
,0x20, 0x60, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 // 49 = 1
,0x70, 0x88, 0x08, 0x10, 0x20, 0x40, 0x80, 0xf8 // 50 = 2
,0x70, 0x88, 0x08, 0x30, 0x08, 0x08, 0x88, 0x70 // 51 = 3
,0x10, 0x30, 0x50, 0x50, 0x90, 0xf8, 0x10, 0x10 // 52 = 4
,0xf8, 0x80, 0x80, 0xf0, 0x08, 0x88, 0x88, 0x70 // 53 = 5
,0x70, 0x88, 0x80, 0xf0, 0x88, 0x88, 0x88, 0x70 // 54 = 6
,0xf8, 0x08, 0x10, 0x10, 0x20, 0x20, 0x40, 0x40 // 55 = 7
,0x70, 0x88, 0x88, 0x70, 0x88, 0x88, 0x88, 0x70 // 56 = 8
,0x70, 0x88, 0x88, 0x78, 0x08, 0x08, 0x88, 0x70 // 57 = 9
,0x00, 0x00, 0x60, 0x60, 0x00, 0x00, 0x60, 0x60 // 58 = :
,0x00, 0x00, 0x60, 0x60, 0x00, 0x60, 0x60, 0x20 // 59 = ;
,0x08, 0x10, 0x20, 0x40, 0x20, 0x10, 0x08, 0x00 // 60 = <
,0x00, 0x00, 0xf8, 0x00, 0xf8, 0x00, 0x00, 0x00 // 61 = =
,0x80, 0x40, 0x20, 0x10, 0x20, 0x40, 0x80, 0x00 // 62 = >
,0xf0, 0x08, 0x08, 0x30, 0x60, 0x00, 0x60, 0x60 // 63 = ?
,0x70, 0x88, 0xa8, 0xa8, 0xa8, 0xb8, 0x80, 0x70 // 64 = @
,0xf0, 0x88, 0x88, 0xf8, 0x88, 0x88, 0x88, 0x88 // 65 = A
,0xe0, 0x90, 0x90, 0xf0, 0x88, 0x88, 0x88, 0xf0 // 66 = B
,0x70, 0x88, 0x80, 0x80, 0x80, 0x80, 0x88, 0x70 // 67 = C
,0xe0, 0x90, 0x88, 0x88, 0x88, 0x88, 0x88, 0xf0 // 68 = D
,0x78, 0x80, 0x80, 0xf0, 0x80, 0x80, 0x80, 0xf8 // 69 = E
,0x78, 0x80, 0x80, 0xe0, 0x80, 0x80, 0x80, 0x80 // 70 = F
,0x78, 0x80, 0x80, 0xb8, 0x88, 0x88, 0x88, 0x70 // 71 = G
,0x88, 0x88, 0x88, 0xf8, 0x88, 0x88, 0x88, 0x88 // 72 = H
,0xf8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xf8 // 73 = I
,0xf0, 0x08, 0x08, 0x38, 0x08, 0x88, 0x88, 0x70 // 74 = J
,0x88, 0x90, 0xa0, 0xe0, 0xa0, 0x90, 0x90, 0x88 // 75 = K
,0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8 // 76 = L
,0x88, 0xd8, 0xa8, 0xa8, 0x88, 0x88, 0x88, 0x88 // 77 = M
,0x88, 0xc8, 0xa8, 0xa8, 0xa8, 0x98, 0x88, 0x88 // 78 = N
,0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70 // 79 = O
,0xf0, 0x88, 0x88, 0xf0, 0x80, 0x80, 0x80, 0x80 // 80 = P
,0x70, 0x88, 0x88, 0x88, 0x88, 0xa8, 0x90, 0x68 // 81 = Q
,0xf0, 0x88, 0x88, 0xf0, 0x88, 0x88, 0x88, 0x88 // 82 = R
,0x70, 0x88, 0x80, 0xf0, 0x08, 0x08, 0x88, 0x70 // 83 = S
,0xf8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 // 84 = T
,0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70 // 85 = U
,0x88, 0x88, 0x88, 0x50, 0x50, 0x50, 0x20, 0x20 // 86 = V
,0x88, 0x88, 0x88, 0x88, 0xa8, 0xa8, 0xd8, 0x88 // 87 = W
,0x88, 0x88, 0x50, 0x20, 0x50, 0x50, 0x88, 0x88 // 88 = X
,0x88, 0x88, 0x88, 0x20, 0x20, 0x20, 0x20, 0x20 // 89 = Y
,0xf8, 0x08, 0x10, 0x78, 0x20, 0x40, 0x80, 0xf8 // 90 = Z
,0x38, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x38 // 91 = [
,0x80, 0x40, 0x40, 0x20, 0x20, 0x10, 0x10, 0x08 // 92 = Backslash
,0xe0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xe0 // 93 = ]
,0x20, 0x50, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00 // 94 = ^
,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8 // 95 = _
,0x40, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00 // 96 = '
,0x00, 0x70, 0x88, 0x08, 0x78, 0x88, 0x88, 0x78 // 97 = a
,0x80, 0x80, 0x80, 0xf0, 0x88, 0x88, 0x88, 0xf0 // 98 = b
,0x00, 0x00, 0x70, 0x88, 0x80, 0x80, 0x88, 0x70 // 99 = c
,0x08, 0x08, 0x08, 0x78, 0x88, 0x88, 0x88, 0x78 // 100 = d
,0x00, 0x00, 0x70, 0x88, 0x88, 0xf0, 0x80, 0x78 // 101 = e
,0x30, 0x48, 0x40, 0xe0, 0x40, 0x40, 0x40, 0x40 // 102 = f
,0x00, 0x78, 0x88, 0x88, 0x78, 0x08, 0x88, 0x70 // 103 = g
,0x80, 0x80, 0x80, 0xf0, 0x88, 0x88, 0x88, 0x88 // 104 = h
,0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 // 105 = i
,0x10, 0x00, 0x10, 0x10, 0x10, 0x10, 0x90, 0x60 // 106 = j
,0x80, 0x80, 0x80, 0x88, 0xb0, 0xc0, 0xb0, 0x88 // 107 = k
,0xc0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x38 // 108 = l
,0x00, 0x00, 0xd0, 0xa8, 0xa8, 0xa8, 0xa8, 0xa8 // 109 = m
,0x00, 0x00, 0xb0, 0xc8, 0x88, 0x88, 0x88, 0x88 // 110 = n
,0x00, 0x00, 0x70, 0x88, 0x88, 0x88, 0x88, 0x70 // 111 = o
,0x00, 0x70, 0x88, 0x88, 0xf0, 0x80, 0x80, 0x80 // 112 = p
,0x00, 0x78, 0x88, 0x88, 0x78, 0x08, 0x08, 0x08 // 113 = q
,0x00, 0x00, 0x98, 0xe0, 0x80, 0x80, 0x80, 0x80 // 114 = r
,0x00, 0x00, 0x78, 0x80, 0x70, 0x08, 0x08, 0xf0 // 115 = s
,0x20, 0x20, 0xf8, 0x20, 0x20, 0x20, 0x20, 0x30 // 116 = t
,0x00, 0x00, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70 // 117 = u
,0x00, 0x00, 0x88, 0x88, 0x88, 0x50, 0x50, 0x20 // 118 = v
,0x00, 0x00, 0xa8, 0xa8, 0xa8, 0x50, 0x50, 0x50 // 119 = w
,0x00, 0x00, 0x88, 0x88, 0x50, 0x20, 0x50, 0x88 // 120 = x
,0x00, 0x00, 0x88, 0x88, 0x70, 0x10, 0x20, 0xc0 // 121 = y
,0x00, 0x00, 0xf8, 0x08, 0x78, 0x20, 0x40, 0xf8 // 122 = z
,0x38, 0x40, 0x40, 0x80, 0x40, 0x40, 0x40, 0x38 // 123 = {
,0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 // 124 = |
,0xe0, 0x10, 0x10, 0x08, 0x10, 0x10, 0x10, 0xe0 // 125 = }
,0x00, 0x00, 0x00, 0x68, 0x90, 0x00, 0x00, 0x00 // 126 = ~
,0xf8, 0x88, 0xd8, 0xa8, 0xa8, 0xd8, 0x88, 0xf8 // 127 = invalid
};
#endif
